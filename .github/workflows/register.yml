name: Register APP

on:
  schedule:
    - cron: "0 3 */1 * *"  # 每日 UTC 3:00（台灣時間 11:00）
  workflow_dispatch:

jobs:
  register:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Setup Python And Poetry
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - uses: Gr1N/setup-poetry@v8

      - name: Setup Node JS
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Debug Secrets
        run: |
          echo "USER is set: ${{ secrets.USER != '' }}"
          echo "PASSWD is set: ${{ secrets.PASSWD != '' }}"

      - name: Install Requirement
        run: |
          set -x
          poetry install --no-root
          cd register
          npm install

      - name: Register App
        env:
          USER: ${{ secrets.USER }}
          PASSWD: ${{ secrets.PASSWD }}
        run: |
          set -e
          cd register
          bash register_apps_by_force.sh || { echo "register_apps_by_force.sh failed"; exit 1; }
          cd ..
          poetry run python crypto.py e || { echo "crypto.py failed"; exit 1; }

      - name: Commit And Push (Reset Branch)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          git config user.name github-actions
          git config user.email github-actions@github.com

          git checkout --orphan latest_branch
          git rm -rf --cached .
          git add -A
          git commit -m "Generate App Config"
          git branch -D master
          git branch -m master
          git push -f https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }} master

      - name: Notify via GitHub Issue
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issueTitle = `✅ Workflow Success: Register APP`;
            const issueBody = `The workflow completed successfully on branch \`${{ github.ref }}\`.\n\nTriggered by: \`${{ github.event_name }}\`\nRun ID: \`${{ github.run_id }}\``;
            const { data: issue } = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: issueTitle,
              body: issueBody
            });
